#!/bin/bash

# Delete last component from ${_script} ##
_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)
# import config to send mail
source ${_dir}/myip.cronmail.config

NMAP_TMP=/tmp/nmap_issues
NMAP_DIR=/var/log/nmap

if [ ! -d "${NMAP_DIR}" ]; then
    mkdir "${NMAP_DIR}"
fi

NMAP_LOG=${NMAP_DIR}/nmap.log
NMAP_OLD_LOG=${NMAP_DIR}/nmap_old.log

# backup previous scan
if [ -f "${NMAP_LOG}" ]; then
   cat  "${NMAP_LOG}" >> "${NMAP_OLD_LOG}"
   rm   "${NMAP_LOG}"
fi
# start a fresh scan
touch "${NMAP_LOG}"

sudo nmap -snP -oG - 192.168.1.* \
| tee -a "${NMAP_LOG}" \
| grep -oE '((1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])' \
| while read addr
do

  OUTPUT=${NMAP_DIR}/nmap_${addr}_log
  #echo Output=${OUTPUT}
  if [ ! -f ${OUTPUT} ]; then
     echo `date +"%Y-%m-%d %T"` = new device ${addr} >> ${NMAP_TMP}
     echo `date +"%Y-%m-%d %T"` = new device ${addr} >> ${OUTPUT}
  fi
  echo Seen `date +"%Y-%m-%d %T"` >> ${OUTPUT}

done

# http://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash
while [[ $# > 0 ]]
do

    key="$1"
    #echo key=${key}

    case ${key} in
        -daily)
        #let AGE="60*24"
        let AGE="60*4"
        SUBJECT="NMAP Check Hosts - Daily from `hostname`"
        echo "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">"  >> ${NMAP_TMP}
        echo "<html><head><title>${SUBJECT}</title>"                                                                       >> ${NMAP_TMP}
        echo "<style type=\"text/css\">pre { font-size:10pt; }</style></head><body>"                                       >> ${NMAP_TMP}

        echo "<p style='font-weight:bold'>--------- &gt; Stale log files (untouched >4hrs)</p>"                            >> ${NMAP_TMP}
        find ${NMAP_DIR} -type f -name "nmap_*_log" -mmin +$AGE  | awk 'NF{$0="<p>" $0 "</p>"}1'                           >> ${NMAP_TMP}
        find ${NMAP_DIR} -type f -name "nmap_*_log" -size 0b -mtime +7                                                     >  ${NMAP_TMP}_stale

        if [ -s "${NMAP_TMP}" ]; then
            #cat $NMAP_TMP
            # Information for the output is unique hosts previously found
            echo "<p style='font-weight:bold'>--------- &gt; Active network hosts</p>" >> ${NMAP_TMP}
            sort -V ${NMAP_DIR}/nmap.log | grep Host: | uniq | awk 'NF{$0="<p>" $0 "</p>"}1'>> ${NMAP_TMP}

            if [ -s "${NMAP_TMP}_stale" ]; then
                echo "<p style='font-weight:bold'>--------- &gt; Stale hosts (will delete)</p>" >> ${NMAP_TMP}
                cat ${NMAP_TMP}_stale  | awk 'NF{$0="<p>" $0 "</p>"}1' >> ${NMAP_TMP}
                find ${NMAP_DIR} -type f -name "nmap_*_log" -size 0b -mtime +7 -delete
            fi

            # https://serverfault.com/questions/68684/how-can-i-get-diff-to-show-only-added-and-deleted-lines-if-diff-cant-do-it-wh
            echo "<p style='font-weight:bold'>--------- &gt; Inactive network hosts (previously seen)</p>" >> ${NMAP_TMP}
            echo "<div style='color:red;'>" >> ${NMAP_TMP}
                # comm -13 means only show unique lines in file two (not unique to file one, or in both)
                # sed is removing leading white space
                # grep is excluding lines that begin with an octothorp # (after optional whitespace)
                comm -13 <(                  /usr/bin/sort <( /bin/sed "s/^[ \t]*//" <( /bin/grep -v ^\s*# "${NMAP_LOG}"     )))  \
                         <( /usr/bin/uniq <( /usr/bin/sort <( /bin/sed "s/^[ \t]*//" <( /bin/grep -v ^\s*# "${NMAP_OLD_LOG}" )))) \
                         | sort -V | sed "s/Status: Up/Status: Down/" | awk 'NF{$0="<p>" $0 "</p>"}1' \
                                  >> ${NMAP_TMP}
            echo "</div>"   >> ${NMAP_TMP}
            echo "</body></html>" >> ${NMAP_TMP}
            mail -s "${SUBJECT}" $MYIP_ADDRESS_TO \
                 -a "From:$MYIP_ADDRESS_FROM"  \
                 -a "MIME-Version: 1.0" \
                 -a "Content-Type: text/html;" < ${NMAP_TMP}
            #rm $NMAP_TMP
                    mv ${NMAP_TMP} ${NMAP_DIR}/nmap-`date +"%Y-%m-%d_%H%M"`.txt
        fi
        ;;
    esac
    shift # past argument or value
done

# remove logs that are >120 days old
find /var/log/nmap/nmap* -mtime +120 -exec rm '{}' \;


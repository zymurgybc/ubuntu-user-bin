#!/bin/bash
# http://jasperproject.github.io/documentation/installation/

LOGFILE=$HOME/bin/matrix-creator/20-GetJasperProject.log
if [ ! -f "$LOGFILE" ]; then
    touch "$LOGFILE"
fi

echo "cd && cd \"$HOME/source/github.com\"" 2>&1 | tee -a $LOGFILE
cd && cd "$HOME/source/github.com"
if [ ! -d "jasperproject" ]; then
  echo "mkdir jasperproject" 2>&1 | tess -a $LOGFILE
  mkdir jasperproject
fi

cd jasperproject

if [ ! -d "jasper" ]; then
  echo "git clone https://github.com/jasperproject/jasper-client.git jasper"  2>&1 | tee -a $LOGFILE
  git clone https://github.com/jasperproject/jasper-client.git jasper  2>&1 | tee -a $LOGFILE
fi

echo "cd jasper" 2>&1 | tee -a $LOGFILE
cd jasper
echo "in Jasper ... git pull"  2>&1 | tee -a $LOGFILE
git pull  2>&1 | tee -a $LOGFILE

echo 2>&1 | tee -a $LOGFILE
echo "# if you get error installing Jasper, try this..." 2>&1 | tee -a $LOGFILE
echo "# http://stackoverflow.com/questions/27341064/how-do-i-fix-importerror-cannot-import-name-incompleteread" 2>&1 | tee -a $LOGFILE
echo "#sudo apt-get remove python-pip python3-pip" 2>&1 | tee -a $LOGFILE
echo "#sudo python  -measy_install pip"  2>&1 | tee -a $LOGFILE
echo "#sudo python3 -measy_install pip"  2>&1 | tee -a $LOGFILE
echo 2>&1 | tee -a $LOGFILE

# Jasper requires various Python libraries that we can install in one line with:
echo "sudo pip2 install --upgrade setuptools"       2>&1 | tee -a $LOGFILE
sudo pip2 install --upgrade setuptools              2>&1 | tee -a $LOGFILE
echo "sudo pip2 install -r client/requirements.txt" 2>&1 | tee -a $LOGFILE
sudo pip2 install -r client/requirements.txt        2>&1 | tee -a $LOGFILE

# Sometimes it might be neccessary to make jasper.py executable:
echo "chmod +x jasper.py" 2>&1 | tee -a $LOGFILE
chmod +x jasper.py        2>&1 | tee -a $LOGFILE

# To be able to understand what you say, Jasper still needs a Speech-to-Text (STT) engine. 
# Jasper also needs a Text-to-Speech (TTS) engine to answer to your commands.

echo "sudo apt-get install --upgrade pocketsphinx --yes" 2>&1 | tee -a $LOGFILE
sudo apt-get install --upgrade pocketsphinx --yes        2>&1 | tee -a $LOGFILE

cd ~/source

if [ ! -d "code.sf.net" ]; then
  mkdir code.sf.net 2>&1 | tee -a $LOGFILE
fi

cd code.sf.net

if [ ! -d "cmusphinx" ]; then
  mkdir cmusphinx 2>&1 | tee -a $LOGFILE
fi

cd cmusphinx

if [ ! -d "cmuclmtk" ]; then
  svn co https://svn.code.sf.net/p/cmusphinx/code/trunk/cmuclmtk/ 2>&1 | tee -a $LOGFILE
fi

cd cmuclmtk/
./autogen.sh && make && sudo make install 2>&1 | tee -a $LOGFILE
cd ..

# On Raspian, you can install these from the experimental repository:
DEB_EXPERIMENT_REPO=deb http://ftp.debian.org/debian experimental main contrib non-free
if ! grep -q "$DEB_EXPERIMENT_REPO" /etc/apt/sources.list.d/experimental.list ; then
   sudo su -c "echo '$DEB_EXPERIMENT_REPO' > /etc/apt/sources.list.d/experimental.list"

   # We need to add the public keys for the Experimental server... or we have issues with updates
   # W: GPG error: http://ftp.debian.org experimental InRelease: 
   # The following signatures couldn't be verified because the public key is not available: 
   # NO_PUBKEY 8B48AD6246925553 NO_PUBKEY 7638D0442B90D010
   gpg --keyserver pgpkeys.mit.edu --recv-key  8B48AD6246925553
   gpg -a --export 8B48AD6246925553 | sudo apt-key add -
   gpg --keyserver pgpkeys.mit.edu --recv-key  7638D0442B90D010
   gpg -a --export  7638D0442B90D010 | sudo apt-key add -

   sudo apt-get update
fi
sudo apt-get -t experimental install phonetisaurus m2m-aligner mitlm libfst-tools 2>&1 | tee -a $LOGFILE


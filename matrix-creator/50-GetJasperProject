#!/bin/bash
# http://jasperproject.github.io/documentation/installation/

LOGFILE=$HOME/bin/matrix-creator/20-GetJasperProject.log

sudo apt-get update | tee -a $LOGFILE
sudo apt-get install -y vim git-core python-dev python-pip bison \
    libasound2-dev libportaudio-dev python-pyaudio espeak subversion \
     autoconf libtool automake gfortran g++ | tee -a $LOGFILE

if [ ! -f "$LOGFILE" ]; then
    touch "$LOGFILE"
fi

# Jasper requires various Python libraries that we can install in one line with:
echo "sudo pip2 install --upgrade setuptools"       2>&1 | tee -a $LOGFILE
sudo pip2 install --upgrade setuptools              2>&1 | tee -a $LOGFILE
echo "sudo pip2 install -r client/requirements.txt" 2>&1 | tee -a $LOGFILE
sudo pip2 install -r client/requirements.txt        2>&1 | tee -a $LOGFILE

# Sometimes it might be neccessary to make jasper.py executable:
echo "chmod +x jasper.py" 2>&1 | tee -a $LOGFILE
chmod +x jasper.py        2>&1 | tee -a $LOGFILE

# To be able to understand what you say, Jasper still needs a Speech-to-Text (STT) engine. 
# Jasper also needs a Text-to-Speech (TTS) engine to answer to your commands.

echo "sudo apt-get install --upgrade pocketsphinx --yes" 2>&1 | tee -a $LOGFILE
sudo apt-get install --upgrade pocketsphinx --yes        2>&1 | tee -a $LOGFILE

cd ~/source

echo "========================= sphinxbase-0.8 " | tee -a $LOGFILE
if [ ! -f "sphinxbase-0.8.tar.gz" ]; then
    wget http://downloads.sourceforge.net/project/cmusphinx/sphinxbase/0.8/sphinxbase-0.8.tar.gz
fi

tar xf sphinxbase-0.8.tar.gz  | tee -a $LOGFILE
cd ~/source/sphinxbase-0.8
./configure --enable-fixed && make && sudo make install

cd ~/source

echo "========================= pocketsphinx-0.8 " | tee -a $LOGFILE
if [ ! -f "pocketsphinx-0.8.tar.gz" ]; then
    wget http://downloads.sourceforge.net/project/cmusphinx/pocketsphinx/0.8/pocketsphinx-0.8.tar.gz
fi

tar xf pocketsphinx-0.8.tar.gz | tee -a $LOGFILE
cd ~/source/pocketsphinx-0.8/
./configure && make && sudo make install

cd ~/source

echo "========================= openfst-1.3.4 " | tee -a $LOGFILE
if [ ! -f "openfst-1.3.4.tar.gz" ]; then
    wget http://distfiles.macports.org/openfst/openfst-1.3.4.tar.gz
fi

tar xf openfst-1.3.4.tar.gz | tee -a $LOGFILE
cd openfst-1.3.4/
sudo ./configure --enable-compact-fsts --enable-const-fsts --enable-far --enable-lookahead-fsts --enable-pdt
sudo make install

cd ~/source

echo "========================= is2013 " | tee -a $LOGFILE
if [ ! -f "is2013-conversion.tgz" ]; then
    wget https://phonetisaurus.googlecode.com/files/is2013-conversion.tgz
fi

tar xf is2013-conversion.tgz | tee -a $LOGFILE
cd is2013-conversion/phonetisaurus/src/
make  | tee -a $LOGFILE

cd ~/source

echo "========================= m2m-aligner-1.2 " | tee -a $LOGFILE
#if [ ! -f "m2m-aligner-1.2.tar.gz" ]; then
#    wget https://m2m-aligner.googlecode.com/files/m2m-aligner-1.2.tar.gz
#fi
#
#tar xf m2m-aligner-1.2.tar.gz | tee -a $LOGFILE
#
#cd m2m-aligner-1.2
if [ ! -d github.com ]; then
    mkdir github.com
fi
cd github.com

if [ ! -d letter-to-phoneme ]; then
    mkdir letter-to-phoneme
fi
cd letter-to-phoneme

if [ ! -d mitlm ]; then
   git clone https://github.com/letter-to-phoneme/m2m-aligner
fi

cd m2m-aligner

sudo make | tee -a $LOGFILE

cd ~/source

echo "========================= mitlm-0.4.1 " | tee -a $LOGFILE
if [ ! -d github.com ]; then
    mkdir github.com
fi
cd github.com

if [ ! -d mitlm ]; then
    mkdir mitlm
fi
cd mitlm

if [ ! -d mitlm ]; then
   git clone https://github.com/mitlm/mitlm
fi

cd mitlm

#if [ ! -f "mitlm-0.4.1.tar.gz" ]; then
#    wget https://mitlm.googlecode.com/files/mitlm-0.4.1.tar.gz
#fi
#
#tar xf mitlm-0.4.1.tar.gz | tee -a $LOGFILE
#
#cd mitlm-0.4.1
#sudo ./configure && sudo make install | tee -a $LOGFILE
./autogen.sh && sudo make install | tee -a $LOGFILE

cd ~/source

echo "========================= go14b2b " | tee -a $LOGFILE
if [ ! -f "g014b2b.tgz" ]; then
    wget https://www.dropbox.com/s/kfht75czdwucni1/g014b2b.tgz
fi

tar xf g014b2b.tgz | tee -a $LOGFILE
cd g014b2b
./compile-fst.sh | tee -a $LOGFILE
#cd .. && cp g014b2b ~/phonetisaurus
cd ~/source/ && cp -R ./g014b2b ~/phonetisaurus

cd ~/source

echo "========================= cmusphinx " | tee -a $LOGFILE
if [ ! -d "code.sf.net" ]; then
  mkdir code.sf.net 2>&1 | tee -a $LOGFILE
fi

cd code.sf.net

if [ ! -d "cmusphinx" ]; then
  mkdir cmusphinx 2>&1 | tee -a $LOGFILE
fi

cd cmusphinx

if [ ! -d "cmuclmtk" ]; then
  svn co https://svn.code.sf.net/p/cmusphinx/code/trunk/cmuclmtk/ 2>&1 | tee -a $LOGFILE
fi

cd cmuclmtk/
./autogen.sh && make && sudo make install 2>&1 | tee -a $LOGFILE
cd ..

# On Raspian, you can install these from the experimental repository:
DEB_EXPERIMENT_REPO=deb http://ftp.debian.org/debian experimental main contrib non-free
if ! grep -q "$DEB_EXPERIMENT_REPO" /etc/apt/sources.list.d/experimental.list ; then
   sudo su -c "echo '$DEB_EXPERIMENT_REPO' > /etc/apt/sources.list.d/experimental.list"

   # We need to add the public keys for the Experimental server... or we have issues with updates
   # W: GPG error: http://ftp.debian.org experimental InRelease: 
   # The following signatures couldn't be verified because the public key is not available: 
   # NO_PUBKEY 8B48AD6246925553 NO_PUBKEY 7638D0442B90D010
   gpg --keyserver pgpkeys.mit.edu --recv-key  8B48AD6246925553
   gpg -a --export 8B48AD6246925553 | sudo apt-key add -
   gpg --keyserver pgpkeys.mit.edu --recv-key  7638D0442B90D010
   gpg -a --export  7638D0442B90D010 | sudo apt-key add -

   sudo apt-get update
fi

echo "cd && cd \"$HOME/source/github.com\"" 2>&1 | tee -a $LOGFILE
cd && cd "$HOME/source/github.com"
if [ ! -d "jasperproject" ]; then
  echo "mkdir jasperproject" 2>&1 | tess -a $LOGFILE
  mkdir jasperproject
fi

cd jasperproject

if [ ! -d "jasper" ]; then
  echo "git clone https://github.com/jasperproject/jasper-client.git jasper"  2>&1 | tee -a $LOGFILE
  git clone https://github.com/jasperproject/jasper-client.git jasper  2>&1 | tee -a $LOGFILE
fi

echo "cd jasper" 2>&1 | tee -a $LOGFILE
cd jasper
echo "in Jasper ... git pull"  2>&1 | tee -a $LOGFILE
git pull  2>&1 | tee -a $LOGFILE

echo 2>&1 | tee -a $LOGFILE
echo "# if you get error installing Jasper, try this..." 2>&1 | tee -a $LOGFILE
echo "# http://stackoverflow.com/questions/27341064/how-do-i-fix-importerror-cannot-import-name-incompleteread" 2>&1 | tee -a $LOGFILE
echo "#sudo apt-get remove python-pip python3-pip" 2>&1 | tee -a $LOGFILE
echo "#sudo python  -measy_install pip"  2>&1 | tee -a $LOGFILE
echo "#sudo python3 -measy_install pip"  2>&1 | tee -a $LOGFILE
echo 2>&1 | tee -a $LOGFILE

sudo pip install --upgrade setuptools
sudo pip install --upgrade -r client/requirements.txt
chmod +x jasper.py

